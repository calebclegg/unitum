{"version":3,"file":"static/js/996.0c76d0c2.chunk.js","mappings":"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","sources":["components/Search/Empty.tsx","components/Search/Failure.tsx","components/Search/Result.tsx","components/Tag.tsx"],"sourcesContent":["import SearchIcon from \"@mui/icons-material/Search\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface IProps {\n  hasInput: boolean;\n}\n\nconst Empty = ({ hasInput }: IProps) => {\n  if (hasInput) return null;\n\n  return (\n    <Stack alignItems=\"center\" spacing={1} my={6}>\n      <SearchIcon sx={{ width: 120, height: 120, color: \"grey.400\" }} />\n      <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\">\n        Type something to search\n      </Typography>\n    </Stack>\n  );\n};\n\nexport default Empty;\n","import WarningIcon from \"@mui/icons-material/Warning\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\n\ninterface IProps {\n  errorMessage?: string;\n  errorStatus?: number;\n}\n\nconst Failure = ({ errorMessage, errorStatus }: IProps) => {\n  if (!errorMessage) return null;\n\n  return (\n    <Stack alignItems=\"center\" spacing={1} my={6}>\n      <WarningIcon sx={{ width: 120, height: 120, color: \"grey.400\" }} />\n      <Typography\n        align=\"center\"\n        component=\"p\"\n        variant=\"h5\"\n        color=\"textSecondary\"\n      >\n        Oops! {errorMessage}\n      </Typography>\n      {errorStatus === 404 && (\n        <Typography align=\"center\" color=\"textSecondary\">\n          Type something else\n        </Typography>\n      )}\n    </Stack>\n  );\n};\n\nexport default Failure;\n","import Chip from \"@mui/material/Chip\";\nimport Collapse from \"@mui/material/Collapse\";\nimport LinearProgress from \"@mui/material/LinearProgress\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport Popper from \"@mui/material/Popper\";\nimport Paper from \"@mui/material/Paper\";\nimport Stack from \"@mui/material/Stack\";\nimport Typography from \"@mui/material/Typography\";\nimport Tag from \"../Tag\";\nimport useSWR from \"swr\";\nimport { useTheme } from \"@mui/material/styles\";\nimport { useEffect, useMemo, useRef, useState } from \"react\";\nimport { fetcher } from \"../../utils/fetcher\";\nimport Empty from \"./Empty\";\nimport Failure from \"./Failure\";\n\nexport const content =\n  \"...ipsum dolor sit amet consectetur adipisicing elit...\";\n\ninterface IType {\n  type: \"post\" | \"user\" | \"community\";\n  color: \"primary\" | \"success\" | \"error\";\n}\n\nexport const resultTypes: IType[] = [\n  {\n    type: \"post\",\n    color: \"primary\"\n  },\n  {\n    type: \"user\",\n    color: \"error\"\n  },\n  {\n    type: \"community\",\n    color: \"success\"\n  }\n];\n\ninterface IProps {\n  anchorEl: HTMLDivElement | null;\n  query: string;\n}\n\nconst Result = ({ anchorEl, query }: IProps) => {\n  const { transitions, zIndex } = useTheme();\n  const paperRef = useRef<HTMLDivElement>(null);\n  const open = Boolean(anchorEl);\n  const [filters, setFilters] = useState<string[]>([]);\n\n  const result = useMemo(\n    () => content.replaceAll(query, `<mark>${query}</mark>`),\n    [query]\n  );\n\n  const { data, error, isValidating } = useSWR(\n    () => {\n      if (query) {\n        const params = new URLSearchParams();\n        params.set(\"query\", query);\n\n        filters.forEach((type) => {\n          params.set(type, \"1\");\n        });\n\n        return \"search?\" + params.toString();\n      }\n\n      return null;\n    },\n    fetcher,\n    {\n      shouldRetryOnError: false\n    }\n  );\n\n  useEffect(() => {\n    if (paperRef.current) {\n      if (open) {\n        paperRef.current.style.transform = `translateY(12.8px)`;\n        paperRef.current.style.opacity = \"1\";\n      } else {\n        paperRef.current.style.transform = `translateY(0)`;\n        paperRef.current.style.opacity = \"0\";\n      }\n    }\n  }, [open]);\n\n  const toggleFilter = (event: React.MouseEvent<HTMLDivElement>) => {\n    const filter = event.currentTarget.textContent;\n\n    filter &&\n      setFilters((prevFilters) => {\n        const newFilters = prevFilters.filter((f) => f !== filter);\n\n        return newFilters.length === prevFilters.length\n          ? [...prevFilters, filter]\n          : newFilters;\n      });\n  };\n\n  return (\n    <Popper\n      disablePortal\n      open={open}\n      role={undefined}\n      anchorEl={anchorEl}\n      style={{ zIndex: zIndex.modal }}\n    >\n      <Paper\n        ref={paperRef}\n        elevation={6}\n        sx={{\n          width: 400,\n          opacity: 0,\n          maxHeight: 510,\n          overflowY: \"auto\",\n          transform: \"translateY(0)\",\n          borderTopLeftRadius: 0.2,\n          borderTopRightRadius: 0.2,\n          transition: transitions.create([\"transform\", \"opacity\"], {\n            duration: transitions.duration.shortest,\n            easing: transitions.easing.easeOut,\n            delay: transitions.duration.short\n          })\n        }}\n      >\n        <Stack direction=\"row\" spacing={1.5}>\n          {resultTypes.map(({ type, color }) => (\n            <Chip\n              key={type}\n              label={type}\n              color={color}\n              variant={filters.includes(type) ? \"filled\" : \"outlined\"}\n              onClick={toggleFilter}\n              sx={{\n                height: 25,\n                borderRadius: 0.5\n              }}\n            />\n          ))}\n        </Stack>\n        <Collapse in={isValidating}>\n          <LinearProgress sx={{ my: 1.5 }} />\n        </Collapse>\n        <Empty hasInput={!!query} />\n        <Failure\n          errorMessage={error?.message}\n          errorStatus={error?.response.status}\n        />\n        {query && !error ? (\n          <List role=\"listbox\">\n            {[1, 2, 3, 4].map((i) => (\n              <ListItem key={i} role=\"option\" id={`item-${i}`} button>\n                <ListItemText\n                  primary={\n                    <Typography\n                      dangerouslySetInnerHTML={{ __html: result }}\n                      color={isValidating ? \"grey.500\" : \"text.primary\"}\n                    />\n                  }\n                  secondary={<Tag />}\n                  disableTypography\n                />\n              </ListItem>\n            ))}\n          </List>\n        ) : null}\n      </Paper>\n    </Popper>\n  );\n};\n\nexport default Result;\n","import Chip from \"@mui/material/Chip\";\n\nconst Tag = () => {\n  return (\n    <Chip\n      label=\"post\"\n      variant=\"outlined\"\n      color=\"primary\"\n      sx={{ height: 20, borderRadius: 0.5 }}\n    />\n  );\n};\n\nexport default Tag;\n"],"names":["hasInput","alignItems","spacing","my","sx","width","height","color","variant","align","errorMessage","errorStatus","component","content","resultTypes","type","anchorEl","query","useTheme","transitions","zIndex","paperRef","useRef","open","Boolean","useState","filters","setFilters","result","useMemo","replaceAll","useSWR","params","URLSearchParams","set","forEach","toString","fetcher","shouldRetryOnError","error","data","isValidating","useEffect","current","style","transform","opacity","toggleFilter","event","filter","currentTarget","textContent","prevFilters","newFilters","f","length","disablePortal","role","undefined","modal","ref","elevation","maxHeight","overflowY","borderTopLeftRadius","borderTopRightRadius","transition","create","duration","shortest","easing","easeOut","delay","short","direction","map","label","includes","onClick","borderRadius","in","message","response","status","i","id","button","primary","dangerouslySetInnerHTML","__html","secondary","disableTypography"],"sourceRoot":""}
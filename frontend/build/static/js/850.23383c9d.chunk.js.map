{"version":3,"file":"static/js/850.23383c9d.chunk.js","mappings":"wLA4CA,UAtCoB,WAClB,OAAwCA,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAUA,OACE,SAAC,IAAD,CACEC,GAAG,mBACHC,KAAK,SACLC,aAAcJ,EAAaK,IAAI,SAC/BC,UAAUC,EAAAA,EAAAA,IAbO,SAACC,GACpB,IAAQC,EAAUD,EAAME,OAAhBD,MAEFT,EAAe,IAAIW,gBAAgBC,OAAOC,SAASC,QACzDL,EAAQT,EAAae,IAAI,QAASN,GAAST,EAAagB,OAAO,SAC/Df,EAAgBD,EAAaiB,WAAY,CAAEC,SAAS,EAAMC,MAAOV,MAQ9B,KACjCW,gBACE,SAAC,IAAD,CAAgBC,SAAS,QAAzB,UACE,SAAC,IAAD,CAAYC,MAAM,SAASC,SAAS,YAGxCC,aAAa,MACbC,WAAY,CACVC,YAAa,2CAEfC,GAAI,CACFC,MAAO,OACPC,QAAS,QACT,4BAA6B,CAC3BC,GAAI,EACJR,MAAO,qBAAGS,QAAsBC,KAAK,Y,+KCpCxC,SAASC,EAA8BC,GAC5C,OAAOC,EAAAA,EAAAA,GAAqB,oBAAqBD,GAEnD,IACA,GAD8BE,E,OAAAA,GAAuB,oBAAqB,CAAC,OAAQ,SAAU,WAAY,WAAY,gBAAiB,cAAe,uBAAwB,cAAe,c,mBCFtLC,EAAY,CAAC,WAAY,YAAa,YAAa,uBAAwB,oBAAqB,WAAY,WAqC5GC,GAAqBC,EAAAA,EAAAA,IAAO,MAAO,CACvCC,KAAM,oBACNN,KAAM,OACNO,kBAzBwB,SAACC,EAAOC,GAChC,IACEC,EACEF,EADFE,WAEF,MAAO,CAACD,EAAOE,KAAMF,EAAO,WAAD,QAAYG,EAAAA,EAAAA,GAAWF,EAAWvB,aAAkD,IAApCuB,EAAWG,sBAAiCJ,EAAOI,qBAAsBJ,EAAOC,EAAWI,YAkB7IT,EAIxB,gBACDU,EADC,EACDA,MACAL,EAFC,EAEDA,WAFC,OAGGM,EAAAA,EAAAA,GAAS,CACbC,QAAS,OACTC,OAAQ,SAERC,UAAW,MACXC,WAAY,SACZC,WAAY,SACZjC,MAAO2B,EAAMlB,QAAQyB,OAAOC,QACJ,WAAvBb,EAAWI,UAAX,sBAEKU,EAAAA,cAFL,kBAEkDA,EAAAA,YAFlD,KAEyF,CACxFC,UAAW,KAEY,UAAxBf,EAAWvB,UAAwB,CAEpCuC,YAAa,GACY,QAAxBhB,EAAWvB,UAAsB,CAElCwC,WAAY,IACyB,IAApCjB,EAAWG,sBAAiC,CAE7Ce,cAAe,YAkIjB,EAhIoCC,EAAAA,YAAiB,SAAwBC,EAASC,GACpF,IAAMvB,GAAQwB,EAAAA,EAAAA,GAAc,CAC1BxB,MAAOsB,EACPxB,KAAM,sBAIN2B,EAOEzB,EAPFyB,SACAC,EAME1B,EANF0B,UAFF,EAQI1B,EALF2B,UAAAA,OAHF,MAGc,MAHd,IAQI3B,EAJFK,qBAAAA,OAJF,WAQIL,EAHF4B,kBAAAA,OALF,SAMEjD,EAEEqB,EAFFrB,SACSkD,EACP7B,EADFM,QAEIwB,GAAQC,EAAAA,EAAAA,GAA8B/B,EAAOL,GAE7CqC,GAAiBC,EAAAA,EAAAA,MAAoB,GACvC3B,EAAUuB,EAEVA,GAAeG,EAAe1B,QAQ9B0B,IAAmB1B,IACrBA,EAAU0B,EAAe1B,SAG3B,IAAMJ,GAAaM,EAAAA,EAAAA,GAAS,GAAIR,EAAO,CACrCkC,YAAaF,EAAeE,YAC5BC,KAAMH,EAAeG,KACrB9B,qBAAAA,EACA1B,SAAAA,EACA2B,QAAAA,IAGI8B,EArFkB,SAAAlC,GACxB,IACEkC,EAMElC,EANFkC,QACA/B,EAKEH,EALFG,qBACA6B,EAIEhC,EAJFgC,YACAvD,EAGEuB,EAHFvB,SACAwD,EAEEjC,EAFFiC,KACA7B,EACEJ,EADFI,QAEI+B,EAAQ,CACZlC,KAAM,CAAC,OAAQE,GAAwB,uBAAwB1B,GAAY,WAAJ,QAAeyB,EAAAA,EAAAA,GAAWzB,IAAa2B,EAAS4B,GAAe,cAAeC,GAAQ,OAAJ,QAAW/B,EAAAA,EAAAA,GAAW+B,MAEjL,OAAOG,EAAAA,EAAAA,GAAeD,EAAO9C,EAA+B6C,GAyE5CG,CAAkBrC,GAClC,OAAoBsC,EAAAA,EAAAA,KAAKC,EAAAA,EAAAA,SAA6B,CACpD1E,MAAO,KACP0D,UAAuBe,EAAAA,EAAAA,KAAK5C,GAAoBY,EAAAA,EAAAA,GAAS,CACvDkC,GAAIf,EACJzB,WAAYA,EACZwB,WAAWiB,EAAAA,EAAAA,GAAKP,EAAQjC,KAAMuB,GAC9BH,IAAKA,GACJO,EAAO,CACRL,SAA8B,kBAAbA,GAA0BG,GAGzBgB,EAAAA,EAAAA,MAAMvB,EAAAA,SAAgB,CACtCI,SAAU,CAAc,UAAb9C,GAMX6D,EAAAA,EAAAA,KAAK,OAAQ,CACXd,UAAW,cACXmB,wBAAyB,CACvBC,OAAQ,aAEP,KAAMrB,MAf+De,EAAAA,EAAAA,KAAKO,EAAAA,EAAY,CAC3FnE,MAAO,iBACP6C,SAAUA","sources":["components/Search/MobileInput.tsx","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js"],"sourcesContent":["import { useSearchParams } from \"react-router-dom\";\nimport { debounce } from \"@mui/material/utils\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\n\nconst MobileInput = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = event.target;\n\n    const searchParams = new URLSearchParams(window.location.search);\n    value ? searchParams.set(\"query\", value) : searchParams.delete(\"query\");\n    setSearchParams(searchParams.toString(), { replace: true, state: value });\n  };\n\n  return (\n    <OutlinedInput\n      id=\"search-combo-box\"\n      type=\"search\"\n      defaultValue={searchParams.get(\"query\")}\n      onChange={debounce(handleChange, 600)}\n      startAdornment={\n        <InputAdornment position=\"start\">\n          <SearchIcon color=\"action\" fontSize=\"small\" />\n        </InputAdornment>\n      }\n      autoComplete=\"off\"\n      inputProps={{\n        placeholder: \"Search for posts, users and communities\"\n      }}\n      sx={{\n        width: \"100%\",\n        bgcolor: \"#fffa\",\n        \"& .MuiOutlinedInput-input\": {\n          py: 1,\n          color: ({ palette }) => palette.grey[800]\n        }\n      }}\n    />\n  );\n};\n\nexport default MobileInput;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: theme.palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /*#__PURE__*/\n\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n\n        /* eslint-disable-next-line react/no-danger */\n        _jsx(\"span\", {\n          className: \"notranslate\",\n          dangerouslySetInnerHTML: {\n            __html: '&#8203;'\n          }\n        }) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"names":["useSearchParams","searchParams","setSearchParams","id","type","defaultValue","get","onChange","debounce","event","value","target","URLSearchParams","window","location","search","set","delete","toString","replace","state","startAdornment","position","color","fontSize","autoComplete","inputProps","placeholder","sx","width","bgcolor","py","palette","grey","getInputAdornmentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","InputAdornmentRoot","styled","name","overridesResolver","props","styles","ownerState","root","capitalize","disablePointerEvents","variant","theme","_extends","display","height","maxHeight","alignItems","whiteSpace","action","active","inputAdornmentClasses","marginTop","marginRight","marginLeft","pointerEvents","React","inProps","ref","useThemeProps","children","className","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","hiddenLabel","size","classes","slots","composeClasses","useUtilityClasses","_jsx","FormControlContext","as","clsx","_jsxs","dangerouslySetInnerHTML","__html","Typography"],"sourceRoot":""}
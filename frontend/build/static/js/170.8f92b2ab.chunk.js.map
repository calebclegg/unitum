{"version":3,"file":"static/js/170.8f92b2ab.chunk.js","mappings":"oNAMA,SAASA,EAAoBC,GAC3B,OAAOA,EAAUC,UAAU,GAAGC,cAyLhC,MArKA,SAA2BC,GACzB,IACEC,EAKED,EALFC,SADF,EAMID,EAJFE,iBAAAA,OAFF,WAMIF,EAHFG,WAAAA,OAHF,MAGe,UAHf,EAIEC,EAEEJ,EAFFI,YAJF,EAMIJ,EADFK,WAAAA,OALF,MAKe,aALf,EAOMC,EAAWC,EAAAA,QAAa,GACxBC,EAAUD,EAAAA,OAAa,MACvBE,EAAeF,EAAAA,QAAa,GAC5BG,EAAoBH,EAAAA,QAAa,GACvCA,EAAAA,WAAgB,WAMd,OAHAI,YAAW,WACTF,EAAaG,SAAU,IACtB,GACI,WACLH,EAAaG,SAAU,KAExB,IACH,IAAMC,GAAYC,EAAAA,EAAAA,GAClBb,EAASc,IAAKP,GAORQ,GAAkBC,EAAAA,EAAAA,IAAiB,SAAAC,GAGvC,IAAMC,EAAkBT,EAAkBE,QAC1CF,EAAkBE,SAAU,EAC5B,IAAMQ,GAAMC,EAAAA,EAAAA,GAAcb,EAAQI,UAI7BH,EAAaG,UAAYJ,EAAQI,SAAW,YAAaM,GAxDlE,SAA8BA,EAAOE,GACnC,OAAOA,EAAIE,gBAAgBC,YAAcL,EAAMM,SAAWJ,EAAIE,gBAAgBG,aAAeP,EAAMQ,QAuD1BC,CAAqBT,EAAOE,KAK/Fd,EAASM,QACXN,EAASM,SAAU,GAMjBM,EAAMU,aACIV,EAAMU,eAAeC,QAAQrB,EAAQI,UAAY,GAEhDQ,EAAIE,gBAAgBQ,SACjCZ,EAAMa,SAAWvB,EAAQI,QAAQkB,SACjCZ,EAAMa,WAGW7B,GAAqBiB,GACtCf,EAAYc,OAIVc,EAAwB,SAAAC,GAAW,OAAI,SAAAf,GAC3CR,EAAkBE,SAAU,EAC5B,IAAMsB,EAAuBjC,EAASD,MAAMiC,GAExCC,GACFA,EAAqBhB,KAInBiB,EAAgB,CACpBpB,IAAKF,GA2CP,OAxCmB,IAAfR,IACF8B,EAAc9B,GAAc2B,EAAsB3B,IAGpDE,EAAAA,WAAgB,WACd,IAAmB,IAAfF,EAAsB,CACxB,IAAM+B,EAAmBxC,EAAoBS,GACvCe,GAAMC,EAAAA,EAAAA,GAAcb,EAAQI,SAE5ByB,EAAkB,WACtB/B,EAASM,SAAU,GAKrB,OAFAQ,EAAIkB,iBAAiBF,EAAkBpB,GACvCI,EAAIkB,iBAAiB,YAAaD,GAC3B,WACLjB,EAAImB,oBAAoBH,EAAkBpB,GAC1CI,EAAImB,oBAAoB,YAAaF,OAKxC,CAACrB,EAAiBX,KAEF,IAAfF,IACFgC,EAAchC,GAAc6B,EAAsB7B,IAGpDI,EAAAA,WAAgB,WACd,IAAmB,IAAfJ,EAAsB,CACxB,IAAMqC,EAAmB5C,EAAoBO,GACvCiB,GAAMC,EAAAA,EAAAA,GAAcb,EAAQI,SAElC,OADAQ,EAAIkB,iBAAiBE,EAAkBxB,GAChC,WACLI,EAAImB,oBAAoBC,EAAkBxB,OAK7C,CAACA,EAAiBb,KACDsC,EAAAA,EAAAA,KAAKlC,EAAAA,SAAgB,CACvCN,SAAuBM,EAAAA,aAAmBN,EAAUkC,M,4DCxIlDO,GAASC,EAAAA,EAAAA,OAAK,kBAAM,yDA+E1B,EA7Ee,WACb,IAAMC,GAAYC,EAAAA,EAAAA,QAAuB,MACzC,GAAgCC,EAAAA,EAAAA,UAAgC,MAAhE,eAAOC,EAAP,KAAiBC,EAAjB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KAGMC,EAAa,kBAAMH,EAAY,OAM/BI,EAAqB,SAAClC,GAC1B,GAAIA,EAAMa,OAAQ,CAChB,IAAMsB,EAAcC,SAASC,iBAAiB,uBACzCC,MAAMC,KAAKJ,GAAaK,SAASxC,EAAMa,SAC1CoB,MAeN,OAXAQ,EAAAA,EAAAA,YAAU,WAOR,OANIZ,EACFO,SAAShB,iBAAiB,QAASc,GAAoB,GAEvDE,SAASf,oBAAoB,QAASa,GAAoB,GAGrD,kBACLE,SAASf,oBAAoB,QAASa,GAAoB,MAC3D,CAACL,KAGF,SAACa,EAAA,EAAD,CAAeC,MAAOC,EAAAA,GAAtB,UACE,SAAC,EAAD,CAAmB1D,YAAa+C,EAAhC,UACE,iBAAKY,GAAG,mBAAR,WACE,SAACC,EAAA,EAAD,CACEjD,IAAK6B,EACLmB,GAAG,mBACHE,KAAK,SACLC,QAlCU,kBAAMlB,EAAYJ,EAAUhC,UAmCtCuD,UAAUC,EAAAA,EAAAA,IAhCC,SAAClD,GACpBgC,EAAShC,EAAMa,OAAOsC,SA+BmB,KACjCC,gBACE,SAACC,EAAA,EAAD,CAAgBC,SAAS,QAAzB,UACE,SAAC,IAAD,CAAYC,MAAM,SAASC,SAAS,YAGxCC,aAAa,MACbC,WAAY,CACVC,KAAM,WACNC,YAAa,0CACb,YAAa,gBACb,aAAc,0CACd,gBAAiBC,QAAQhC,IAE3BiC,GAAI,CACFC,MAAOlC,EAAW,IAAM,IACxBmC,QAASnC,EAAW,QAAU,QAC9BoC,WAAY,gBAAGC,EAAH,EAAGA,YAAH,OACVA,EAAYC,OAAO,CAAC,mBAAoB,SAAU,CAChDC,OAAQF,EAAYE,OAAOC,QAC3BC,SAAUJ,EAAYI,SAASC,SAEnC,4BAA6B,CAC3BC,GAAI,EACJjB,MAAO,qBAAGkB,QAAsBC,KAAK,WAI3C,SAAC,EAAAC,SAAD,CAAUC,UAAU,mBAApB,UACE,SAACpD,EAAD,CAAQK,SAAUA,EAAUE,MAAOA,e,+KC/ExC,SAAS8C,EAA8BC,GAC5C,OAAOC,EAAAA,EAAAA,GAAqB,oBAAqBD,GAEnD,IACA,GAD8BE,E,OAAAA,GAAuB,oBAAqB,CAAC,OAAQ,SAAU,WAAY,WAAY,gBAAiB,cAAe,uBAAwB,cAAe,c,mBCFtLC,EAAY,CAAC,WAAY,YAAa,YAAa,uBAAwB,oBAAqB,WAAY,WAqC5GC,GAAqBC,EAAAA,EAAAA,IAAO,MAAO,CACvCC,KAAM,oBACNN,KAAM,OACNO,kBAzBwB,SAACvG,EAAOwG,GAChC,IACEC,EACEzG,EADFyG,WAEF,MAAO,CAACD,EAAOE,KAAMF,EAAO,WAAD,QAAYG,EAAAA,EAAAA,GAAWF,EAAWjC,aAAkD,IAApCiC,EAAWG,sBAAiCJ,EAAOI,qBAAsBJ,EAAOC,EAAWI,YAkB7IR,EAIxB,gBACDxC,EADC,EACDA,MACA4C,EAFC,EAEDA,WAFC,OAGGK,EAAAA,EAAAA,GAAS,CACbC,QAAS,OACTC,OAAQ,SAERC,UAAW,MACXC,WAAY,SACZC,WAAY,SACZ1C,MAAOZ,EAAM8B,QAAQyB,OAAOC,QACJ,WAAvBZ,EAAWI,UAAX,sBAEKS,EAAAA,cAFL,kBAEkDA,EAAAA,YAFlD,KAEyF,CACxFC,UAAW,KAEY,UAAxBd,EAAWjC,UAAwB,CAEpCgD,YAAa,GACY,QAAxBf,EAAWjC,UAAsB,CAElCiD,WAAY,IACyB,IAApChB,EAAWG,sBAAiC,CAE7Cc,cAAe,YAkIjB,EAhIoCnH,EAAAA,YAAiB,SAAwBoH,EAAS5G,GACpF,IAAMf,GAAQ4H,EAAAA,EAAAA,GAAc,CAC1B5H,MAAO2H,EACPrB,KAAM,sBAINrG,EAOED,EAPFC,SACA4H,EAME7H,EANF6H,UAFF,EAQI7H,EALF8H,UAAAA,OAHF,MAGc,MAHd,IAQI9H,EAJF4G,qBAAAA,OAJF,WAQI5G,EAHF+H,kBAAAA,OALF,SAMEvD,EAEExE,EAFFwE,SACSwD,EACPhI,EADF6G,QAEIoB,GAAQC,EAAAA,EAAAA,GAA8BlI,EAAOmG,GAE7CgC,GAAiBC,EAAAA,EAAAA,MAAoB,GACvCvB,EAAUmB,EAEVA,GAAeG,EAAetB,QAQ9BsB,IAAmBtB,IACrBA,EAAUsB,EAAetB,SAG3B,IAAMJ,GAAaK,EAAAA,EAAAA,GAAS,GAAI9G,EAAO,CACrCqI,YAAaF,EAAeE,YAC5BC,KAAMH,EAAeG,KACrB1B,qBAAAA,EACApC,SAAAA,EACAqC,QAAAA,IAGI0B,EArFkB,SAAA9B,GACxB,IACE8B,EAME9B,EANF8B,QACA3B,EAKEH,EALFG,qBACAyB,EAIE5B,EAJF4B,YACA7D,EAGEiC,EAHFjC,SACA8D,EAEE7B,EAFF6B,KACAzB,EACEJ,EADFI,QAEI2B,EAAQ,CACZ9B,KAAM,CAAC,OAAQE,GAAwB,uBAAwBpC,GAAY,WAAJ,QAAemC,EAAAA,EAAAA,GAAWnC,IAAaqC,EAASwB,GAAe,cAAeC,GAAQ,OAAJ,QAAW3B,EAAAA,EAAAA,GAAW2B,MAEjL,OAAOG,EAAAA,EAAAA,GAAeD,EAAOzC,EAA+BwC,GAyE5CG,CAAkBjC,GAClC,OAAoBhE,EAAAA,EAAAA,KAAKkG,EAAAA,EAAAA,SAA6B,CACpDtE,MAAO,KACPpE,UAAuBwC,EAAAA,EAAAA,KAAK2D,GAAoBU,EAAAA,EAAAA,GAAS,CACvD8B,GAAId,EACJrB,WAAYA,EACZoB,WAAWgB,EAAAA,EAAAA,GAAKN,EAAQ7B,KAAMmB,GAC9B9G,IAAKA,GACJkH,EAAO,CACRhI,SAA8B,kBAAbA,GAA0B8H,GAGzBe,EAAAA,EAAAA,MAAMvI,EAAAA,SAAgB,CACtCN,SAAU,CAAc,UAAbuE,GAMX/B,EAAAA,EAAAA,KAAK,OAAQ,CACXoF,UAAW,cACXkB,wBAAyB,CACvBC,OAAQ,aAEP,KAAM/I,MAf+DwC,EAAAA,EAAAA,KAAKwG,EAAAA,EAAY,CAC3FxE,MAAO,iBACPxE,SAAUA","sources":["../node_modules/@mui/base/ClickAwayListener/ClickAwayListener.js","components/Search/Input.tsx","../node_modules/@mui/material/InputAdornment/inputAdornmentClasses.js","../node_modules/@mui/material/InputAdornment/InputAdornment.js"],"sourcesContent":["import * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { elementAcceptingRef, exactProp, unstable_ownerDocument as ownerDocument, unstable_useForkRef as useForkRef, unstable_useEventCallback as useEventCallback } from '@mui/utils'; // TODO: return `EventHandlerName extends `on${infer EventName}` ? Lowercase<EventName> : never` once generatePropTypes runs with TS 4.1\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nfunction mapEventPropToEvent(eventProp) {\n  return eventProp.substring(2).toLowerCase();\n}\n\nfunction clickedRootScrollbar(event, doc) {\n  return doc.documentElement.clientWidth < event.clientX || doc.documentElement.clientHeight < event.clientY;\n}\n\n/**\n * Listen for click events that occur somewhere in the document, outside of the element itself.\n * For instance, if you need to hide a menu when people click anywhere else on your page.\n *\n * Demos:\n *\n * - [Click Away Listener](https://mui.com/components/click-away-listener/)\n * - [Menus](https://mui.com/components/menus/)\n *\n * API:\n *\n * - [ClickAwayListener API](https://mui.com/api/click-away-listener/)\n */\nfunction ClickAwayListener(props) {\n  const {\n    children,\n    disableReactTree = false,\n    mouseEvent = 'onClick',\n    onClickAway,\n    touchEvent = 'onTouchEnd'\n  } = props;\n  const movedRef = React.useRef(false);\n  const nodeRef = React.useRef(null);\n  const activatedRef = React.useRef(false);\n  const syntheticEventRef = React.useRef(false);\n  React.useEffect(() => {\n    // Ensure that this component is not \"activated\" synchronously.\n    // https://github.com/facebook/react/issues/20074\n    setTimeout(() => {\n      activatedRef.current = true;\n    }, 0);\n    return () => {\n      activatedRef.current = false;\n    };\n  }, []);\n  const handleRef = useForkRef( // @ts-expect-error TODO upstream fix\n  children.ref, nodeRef); // The handler doesn't take event.defaultPrevented into account:\n  //\n  // event.preventDefault() is meant to stop default behaviors like\n  // clicking a checkbox to check it, hitting a button to submit a form,\n  // and hitting left arrow to move the cursor in a text input etc.\n  // Only special HTML elements have these default behaviors.\n\n  const handleClickAway = useEventCallback(event => {\n    // Given developers can stop the propagation of the synthetic event,\n    // we can only be confident with a positive value.\n    const insideReactTree = syntheticEventRef.current;\n    syntheticEventRef.current = false;\n    const doc = ownerDocument(nodeRef.current); // 1. IE11 support, which trigger the handleClickAway even after the unbind\n    // 2. The child might render null.\n    // 3. Behave like a blur listener.\n\n    if (!activatedRef.current || !nodeRef.current || 'clientX' in event && clickedRootScrollbar(event, doc)) {\n      return;\n    } // Do not act if user performed touchmove\n\n\n    if (movedRef.current) {\n      movedRef.current = false;\n      return;\n    }\n\n    let insideDOM; // If not enough, can use https://github.com/DieterHolvoet/event-propagation-path/blob/master/propagationPath.js\n\n    if (event.composedPath) {\n      insideDOM = event.composedPath().indexOf(nodeRef.current) > -1;\n    } else {\n      insideDOM = !doc.documentElement.contains( // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target) || nodeRef.current.contains( // @ts-expect-error returns `false` as intended when not dispatched from a Node\n      event.target);\n    }\n\n    if (!insideDOM && (disableReactTree || !insideReactTree)) {\n      onClickAway(event);\n    }\n  }); // Keep track of mouse/touch events that bubbled up through the portal.\n\n  const createHandleSynthetic = handlerName => event => {\n    syntheticEventRef.current = true;\n    const childrenPropsHandler = children.props[handlerName];\n\n    if (childrenPropsHandler) {\n      childrenPropsHandler(event);\n    }\n  };\n\n  const childrenProps = {\n    ref: handleRef\n  };\n\n  if (touchEvent !== false) {\n    childrenProps[touchEvent] = createHandleSynthetic(touchEvent);\n  }\n\n  React.useEffect(() => {\n    if (touchEvent !== false) {\n      const mappedTouchEvent = mapEventPropToEvent(touchEvent);\n      const doc = ownerDocument(nodeRef.current);\n\n      const handleTouchMove = () => {\n        movedRef.current = true;\n      };\n\n      doc.addEventListener(mappedTouchEvent, handleClickAway);\n      doc.addEventListener('touchmove', handleTouchMove);\n      return () => {\n        doc.removeEventListener(mappedTouchEvent, handleClickAway);\n        doc.removeEventListener('touchmove', handleTouchMove);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, touchEvent]);\n\n  if (mouseEvent !== false) {\n    childrenProps[mouseEvent] = createHandleSynthetic(mouseEvent);\n  }\n\n  React.useEffect(() => {\n    if (mouseEvent !== false) {\n      const mappedMouseEvent = mapEventPropToEvent(mouseEvent);\n      const doc = ownerDocument(nodeRef.current);\n      doc.addEventListener(mappedMouseEvent, handleClickAway);\n      return () => {\n        doc.removeEventListener(mappedMouseEvent, handleClickAway);\n      };\n    }\n\n    return undefined;\n  }, [handleClickAway, mouseEvent]);\n  return /*#__PURE__*/_jsx(React.Fragment, {\n    children: /*#__PURE__*/React.cloneElement(children, childrenProps)\n  });\n}\n\nprocess.env.NODE_ENV !== \"production\" ? ClickAwayListener.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit TypeScript types and run \"yarn proptypes\"  |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The wrapped element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * If `true`, the React tree is ignored and only the DOM tree is considered.\n   * This prop changes how portaled elements are handled.\n   * @default false\n   */\n  disableReactTree: PropTypes.bool,\n\n  /**\n   * The mouse event to listen to. You can disable the listener by providing `false`.\n   * @default 'onClick'\n   */\n  mouseEvent: PropTypes.oneOf(['onClick', 'onMouseDown', 'onMouseUp', false]),\n\n  /**\n   * Callback fired when a \"click away\" event is detected.\n   */\n  onClickAway: PropTypes.func.isRequired,\n\n  /**\n   * The touch event to listen to. You can disable the listener by providing `false`.\n   * @default 'onTouchEnd'\n   */\n  touchEvent: PropTypes.oneOf(['onTouchEnd', 'onTouchStart', false])\n} : void 0;\n\nif (process.env.NODE_ENV !== 'production') {\n  // eslint-disable-next-line\n  ClickAwayListener['propTypes' + ''] = exactProp(ClickAwayListener.propTypes);\n}\n\nexport default ClickAwayListener;","import ClickAwayListener from \"@mui/base/ClickAwayListener\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport OutlinedInput from \"@mui/material/OutlinedInput\";\nimport InputAdornment from \"@mui/material/InputAdornment\";\nimport { debounce } from \"@mui/material/utils\";\nimport { ThemeProvider } from \"@mui/material/styles\";\nimport { lazy, Suspense, useEffect, useRef, useState } from \"react\";\nimport { lightTheme } from \"../../lib\";\n\nconst Result = lazy(() => import(\"./Result\"));\n\nconst Search = () => {\n  const searchRef = useRef<HTMLDivElement>(null);\n  const [anchorEl, setAnchorEl] = useState<HTMLDivElement | null>(null);\n  const [query, setQuery] = useState(\"\");\n\n  const handleFocus = () => setAnchorEl(searchRef.current);\n  const handleBlur = () => setAnchorEl(null);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const checkActiveElement = (event: Event) => {\n    if (event.target) {\n      const allChildren = document.querySelectorAll(\"#search-container *\");\n      if (!Array.from(allChildren).includes(event.target as Element))\n        handleBlur();\n    }\n  };\n\n  useEffect(() => {\n    if (anchorEl) {\n      document.addEventListener(\"focus\", checkActiveElement, true);\n    } else {\n      document.removeEventListener(\"focus\", checkActiveElement, true);\n    }\n\n    return () =>\n      document.removeEventListener(\"focus\", checkActiveElement, true);\n  }, [anchorEl]);\n\n  return (\n    <ThemeProvider theme={lightTheme}>\n      <ClickAwayListener onClickAway={handleBlur}>\n        <div id=\"search-container\">\n          <OutlinedInput\n            ref={searchRef}\n            id=\"search-combo-box\"\n            type=\"search\"\n            onFocus={handleFocus}\n            onChange={debounce(handleChange, 600)}\n            startAdornment={\n              <InputAdornment position=\"start\">\n                <SearchIcon color=\"action\" fontSize=\"small\" />\n              </InputAdornment>\n            }\n            autoComplete=\"off\"\n            inputProps={{\n              role: \"combobox\",\n              placeholder: \"Search for posts, users and communities\",\n              \"aria-owns\": \"search-result\",\n              \"aria-label\": \"Search for posts, users and communities\",\n              \"aria-expanded\": Boolean(anchorEl)\n            }}\n            sx={{\n              width: anchorEl ? 400 : 300,\n              bgcolor: anchorEl ? \"#fffa\" : \"#fff5\",\n              transition: ({ transitions }) =>\n                transitions.create([\"background-color\", \"width\"], {\n                  easing: transitions.easing.easeOut,\n                  duration: transitions.duration.short\n                }),\n              \"& .MuiOutlinedInput-input\": {\n                py: 1,\n                color: ({ palette }) => palette.grey[800]\n              }\n            }}\n          />\n          <Suspense fallback={<div />}>\n            <Result anchorEl={anchorEl} query={query} />\n          </Suspense>\n        </div>\n      </ClickAwayListener>\n    </ThemeProvider>\n  );\n};\n\nexport default Search;\n","import { generateUtilityClass, generateUtilityClasses } from '@mui/base';\nexport function getInputAdornmentUtilityClass(slot) {\n  return generateUtilityClass('MuiInputAdornment', slot);\n}\nconst inputAdornmentClasses = generateUtilityClasses('MuiInputAdornment', ['root', 'filled', 'standard', 'outlined', 'positionStart', 'positionEnd', 'disablePointerEvents', 'hiddenLabel', 'sizeSmall']);\nexport default inputAdornmentClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext from '../FormControl/FormControlContext';\nimport useFormControl from '../FormControl/useFormControl';\nimport styled from '../styles/styled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    ownerState\n  } = props;\n  return [styles.root, styles[`position${capitalize(ownerState.position)}`], ownerState.disablePointerEvents === true && styles.disablePointerEvents, styles[ownerState.variant]];\n};\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disablePointerEvents,\n    hiddenLabel,\n    position,\n    size,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, hiddenLabel && 'hiddenLabel', size && `size${capitalize(size)}`]\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = styled('div', {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: theme.palette.action.active\n}, ownerState.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.${inputAdornmentClasses.hiddenLabel})`]: {\n    marginTop: 16\n  }\n}, ownerState.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, ownerState.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, ownerState.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('MUI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n  }\n\n  const ownerState = _extends({}, props, {\n    hiddenLabel: muiFormControl.hiddenLabel,\n    size: muiFormControl.size,\n    disablePointerEvents,\n    position,\n    variant\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"text.secondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /*#__PURE__*/\n\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n\n        /* eslint-disable-next-line react/no-danger */\n        _jsx(\"span\", {\n          className: \"notranslate\",\n          dangerouslySetInnerHTML: {\n            __html: '&#8203;'\n          }\n        }) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"names":["mapEventPropToEvent","eventProp","substring","toLowerCase","props","children","disableReactTree","mouseEvent","onClickAway","touchEvent","movedRef","React","nodeRef","activatedRef","syntheticEventRef","setTimeout","current","handleRef","useForkRef","ref","handleClickAway","useEventCallback","event","insideReactTree","doc","ownerDocument","documentElement","clientWidth","clientX","clientHeight","clientY","clickedRootScrollbar","composedPath","indexOf","contains","target","createHandleSynthetic","handlerName","childrenPropsHandler","childrenProps","mappedTouchEvent","handleTouchMove","addEventListener","removeEventListener","mappedMouseEvent","_jsx","Result","lazy","searchRef","useRef","useState","anchorEl","setAnchorEl","query","setQuery","handleBlur","checkActiveElement","allChildren","document","querySelectorAll","Array","from","includes","useEffect","ThemeProvider","theme","lightTheme","id","OutlinedInput","type","onFocus","onChange","debounce","value","startAdornment","InputAdornment","position","color","fontSize","autoComplete","inputProps","role","placeholder","Boolean","sx","width","bgcolor","transition","transitions","create","easing","easeOut","duration","short","py","palette","grey","Suspense","fallback","getInputAdornmentUtilityClass","slot","generateUtilityClass","generateUtilityClasses","_excluded","InputAdornmentRoot","styled","name","overridesResolver","styles","ownerState","root","capitalize","disablePointerEvents","variant","_extends","display","height","maxHeight","alignItems","whiteSpace","action","active","inputAdornmentClasses","marginTop","marginRight","marginLeft","pointerEvents","inProps","useThemeProps","className","component","disableTypography","variantProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","hiddenLabel","size","classes","slots","composeClasses","useUtilityClasses","FormControlContext","as","clsx","_jsxs","dangerouslySetInnerHTML","__html","Typography"],"sourceRoot":""}